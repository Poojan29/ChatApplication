@model IEnumerable<ChatApp.Models.Chat>

@{
    ViewBag.Title = "Chat";
}

<h2>Chat Room</h2>

<style>
    #chatContainer {
        width: 100%;
        max-width: 600px;
        margin: 0 auto;
        font-family: sans-serif;
    }

    #chatWindow {
        height: 500px;
        overflow-y: scroll;
        border: 1px solid #ccc;
        padding: 10px;
        background-color: #f0f0f0;
    }

    .message {
        margin: 10px 0;
        padding: 10px 15px;
        max-width: 75%;
        border-radius: 18px;
        clear: both;
        display: inline-block;
        word-wrap: break-word;
    }

    .timestamp {
        font-size: 8px;
    }

    .message.sent {
        background-color: #dcf8c6;
        float: right;
        text-align: right;
    }

    .message.received {
        background-color: #fff;
        float: left;
        text-align: left;
    }

    #inputArea {
        margin-top: 10px;
    }

        #inputArea input[type="text"] {
            width: 40%;
            padding: 10px;
            margin-right: 10px;
        }

        #inputArea button {
            padding: 10px 20px;
        }
</style>

<div id="chatContainer">
    <div id="chatWindow">
        @foreach (var msg in Model)
        {
            var cssClass = msg.SenderUsername == ViewBag.UserName ? "sent" : "received";
            <div class="message @cssClass">
                <strong>@msg.SenderUsername:</strong> @msg.Message
                <div class="timestamp">@msg.Time</div>
            </div>
        }
    </div>

    <div id="inputArea">
        @using (Html.BeginForm("UploadImage", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <input type="file" name="imageFile" accept="image/*" />
            <input type="submit" value="Upload Image" />
        }
        <input type="text" id="userName" placeholder="Your Name" />
        <input type="text" id="message" placeholder="Type your message..." />
        <button onclick="sendMessage()">Send</button>
    </div>
</div>

@section scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

    <script>
        let connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub") // Match the endpoint in Program.cs
            .build();

        let userName = '';

        // Handle incoming messages
        connection.on("ReceiveMessage", function (name, message, time) {
            const cssClass = name === userName ? 'sent' : 'received';
            const msgHtml = `
                <div class="message ${cssClass}">
                    <strong>${name}:</strong> ${message}
                    <div class="timestamp">${time}</div>
                </div>`;
            $('#chatWindow').append(msgHtml);
            $('#chatWindow').scrollTop($('#chatWindow')[0].scrollHeight);
        });

        // Start the connection and bind event
        connection.start().then(function () {
            $('#message').keypress(function (e) {
                if (e.which === 13) {
                    sendMessage();
                }
            });
        }).catch(function (err) {
            return console.error(err.toString());
        });

        function sendMessage() {
            userName = $('#userName').val();
            const message = $('#message').val();
            const time = new Date().toLocaleTimeString();

            if (!userName || !message) {
                alert("Please enter your name before sending a message!");
                return;
            }

            connection.invoke("SendMessage", userName, message, time)
                .catch(function (err) {
                    return console.error(err.toString());
                });

            $('#message').val('').focus();
        }
    </script>
}
